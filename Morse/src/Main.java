import java.io.*;
import java.nio.file.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        String Choice = ""; // contenitore risposte dello scanner
        String Phrase = ""; // contenitore frasi dello scanner
        String Morse = ""; // contenitore morse dello scanner

        System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");

        File file = new File();

        Path path = Paths.get("./src/path.txt");
        boolean status = true;

        Scanner a = new Scanner(System.in); // scanner per le risposte o le scelte

        Encryption Phrase_to_Encrypt = new Encryption(Phrase);
        Decryption Morse_to_Decrypt = new Decryption(Morse);

/*      -------_______-------_______-------_______-------       */

        List<String> lines = new ArrayList<>();

        boolean gotwell = true;

        try{
            lines = Files.readAllLines(path);
            gotwell = true;
            for (String line : lines){
                if(line.isEmpty()){}
                else {file.setPath(line);}
            }
        }catch (IOException e){
            System.out.println(
                            "\n-----------------!!!ERROR!!!-----------------" +
                            "\nAn error occurred in trying reading \"path.txt\"." +
                            "\nCheck if \"" + path + "\" exists or is modifiable." +
                            "\nIf you want to use the \"history\" options you'll have to fix" +
                            "\nthe problem and restart the application." +
                            "\n---------------------------------------------\n");
            gotwell = false;
        }


        System.out.println("ATTENTION! This application works exclusively with Morse code generated by this application.\n");


        while(true){/* Ciao, come stai baby? Il mio numero Ã¨ 192 129 43 10, chiamami :)*/
            if(gotwell){
                file.readHistory();
                status = file.getStatus();
            }

            System.out.println("Choose wich action you want to take:");
            if(status){
                System.out.print("1 = Encrypt" + "\n" +
                        "2 = Decrypt" + "\n" +
                        "3 = History Options" + "\n" +
                        "4 = Exit\n" +
                        "\n> ");
                Choice = a.nextLine();
                System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");

                if (Choice.equals("1")){
                    System.out.println("Write the phrase you want to encrypt down below:");
                    System.out.print("> ");
                    Phrase = a.nextLine();
                    System.out.println("\nEncryption in progress...\n");
                    Phrase_to_Encrypt.setPhrase(Phrase);
                    System.out.println("Result:");
                    System.out.println(Phrase_to_Encrypt.Encrypt());
                }
                else if (Choice.equals("2")){
                    System.out.println("Write the morse you want to decrypt down below:");
                    Morse = a.nextLine();
                    System.out.println("Decryption in progress...");
                    Morse_to_Decrypt.setMorse(Morse);
                    System.out.println(Morse_to_Decrypt.Decrypt());
                }
                else if (Choice.equals("3")){
                    System.out.println("Choose wich action you want to take:\n");
                    System.out.print("1 = Show History" + "\n" +
                            "2 = Erase History" + "\n" +
                            "3 = Change the \"history\" file path" + "\n" +
                            "4 = Go back to the main choosing\n" +
                            "\n>");
                    Choice = a.nextLine();
                    if(Choice.equals("1")){
                        file.printHistory();
                    }
                    else if(Choice.equals("2")){
                        try {
                            Files.delete(path);
                            Files.createFile(path);
                            System.out.println("History Erased");
                        } catch (IOException e) {
                            System.out.println("An error occurred in trying erasing the history!");
                        }
                    }
                    else if(Choice.equals("3")){
                        System.out.println("ATTENTION! This option will only change the location stored in the application. The path change is irreversible!");
                        System.out.println("This will not change the actual location of the \"history\" file!");
                        System.out.println("Use this only if you have another history file that is compatible and/or the file is stored in another location!");
                        System.out.println("Type \"007\" if you want to exit this option.");
                        System.out.println("Path example: \"./src/history.txt\"");

                        System.out.println("\nWrite the new path:");
                        Choice = a.nextLine();

                        if(Choice.toString().equals("007")){
                            System.out.println("");
                        }
                        else {
                            System.out.println("Updating path...\n");
                            file.setPath(Choice);
                        }
                    }
                    else if(Choice.equals("4")){}
                    else{
                        System.out.println("The option that you chose is not valid. Try again.");
                    }
                }
                else if (Choice.equals("4")){
                    System.out.println("Exiting...");
                    System.exit(0);
                }
                else {
                    System.out.println("The option that you chose is not valid. Try again.");
                }
            }
            else{
                System.out.println("1 = Encrypt" + "\n" +
                        "2 = Decrypt" + "\n" +
                        "3 = Exit");
                Choice = a.nextLine();
                if (Choice.equals("1")){
                    Phrase = a.nextLine();
                    System.out.println("Encryption in progress...");
                    Phrase_to_Encrypt.setPhrase(Phrase);
                    System.out.println(Phrase_to_Encrypt.Encrypt());
                }
                else if (Choice.equals("2")){
                    Morse = a.nextLine();
                    System.out.println("Decryption in progress...");
                    Morse_to_Decrypt.setMorse(Morse);
                    System.out.println(Morse_to_Decrypt.Decrypt());
                }
                else if (Choice.equals("3")){
                    System.out.println("Exiting...");
                    System.exit(0);
                }
                else {
                    System.out.println("The option that you chose is not valid. Try again.");
                }
            }
        }
    }
}